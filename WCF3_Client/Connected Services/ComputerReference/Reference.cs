//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComputerReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Computer", Namespace="http://schemas.datacontract.org/2004/07/WcfService_8703133")]
    public partial class Computer : object
    {
        
        private int BrandField;
        
        private string DisplayResolutionField;
        
        private string HardDriveField;
        
        private string ImageUrlField;
        
        private string NameField;
        
        private int OsField;
        
        private double PriceField;
        
        private int QuantityField;
        
        private string RamField;
        
        private string ScreenSizeField;
        
        private string UuidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Brand
        {
            get
            {
                return this.BrandField;
            }
            set
            {
                this.BrandField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayResolution
        {
            get
            {
                return this.DisplayResolutionField;
            }
            set
            {
                this.DisplayResolutionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HardDrive
        {
            get
            {
                return this.HardDriveField;
            }
            set
            {
                this.HardDriveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl
        {
            get
            {
                return this.ImageUrlField;
            }
            set
            {
                this.ImageUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Os
        {
            get
            {
                return this.OsField;
            }
            set
            {
                this.OsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ram
        {
            get
            {
                return this.RamField;
            }
            set
            {
                this.RamField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScreenSize
        {
            get
            {
                return this.ScreenSizeField;
            }
            set
            {
                this.ScreenSizeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uuid
        {
            get
            {
                return this.UuidField;
            }
            set
            {
                this.UuidField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/WcfService_8703133")]
    public partial class Brand : object
    {
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OS", Namespace="http://schemas.datacontract.org/2004/07/WcfService_8703133")]
    public partial class OS : object
    {
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ComputerReference.IComputerService")]
    public interface IComputerService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/AddComputer", ReplyAction="http://tempuri.org/IComputerService/AddComputerResponse")]
        string AddComputer(ComputerReference.Computer computer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/AddComputer", ReplyAction="http://tempuri.org/IComputerService/AddComputerResponse")]
        System.Threading.Tasks.Task<string> AddComputerAsync(ComputerReference.Computer computer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/UpdateComputer", ReplyAction="http://tempuri.org/IComputerService/UpdateComputerResponse")]
        string UpdateComputer(ComputerReference.Computer computer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/UpdateComputer", ReplyAction="http://tempuri.org/IComputerService/UpdateComputerResponse")]
        System.Threading.Tasks.Task<string> UpdateComputerAsync(ComputerReference.Computer computer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/DeleteComputer", ReplyAction="http://tempuri.org/IComputerService/DeleteComputerResponse")]
        string DeleteComputer(string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/DeleteComputer", ReplyAction="http://tempuri.org/IComputerService/DeleteComputerResponse")]
        System.Threading.Tasks.Task<string> DeleteComputerAsync(string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/GetComputer", ReplyAction="http://tempuri.org/IComputerService/GetComputerResponse")]
        ComputerReference.Computer GetComputer(string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/GetComputer", ReplyAction="http://tempuri.org/IComputerService/GetComputerResponse")]
        System.Threading.Tasks.Task<ComputerReference.Computer> GetComputerAsync(string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/GetAllComputers", ReplyAction="http://tempuri.org/IComputerService/GetAllComputersResponse")]
        System.Collections.Generic.List<ComputerReference.Computer> GetAllComputers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/GetAllComputers", ReplyAction="http://tempuri.org/IComputerService/GetAllComputersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ComputerReference.Computer>> GetAllComputersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/GetAllBrands", ReplyAction="http://tempuri.org/IComputerService/GetAllBrandsResponse")]
        System.Collections.Generic.List<ComputerReference.Brand> GetAllBrands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/GetAllBrands", ReplyAction="http://tempuri.org/IComputerService/GetAllBrandsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ComputerReference.Brand>> GetAllBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/GetAllOses", ReplyAction="http://tempuri.org/IComputerService/GetAllOsesResponse")]
        System.Collections.Generic.List<ComputerReference.OS> GetAllOses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComputerService/GetAllOses", ReplyAction="http://tempuri.org/IComputerService/GetAllOsesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ComputerReference.OS>> GetAllOsesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IComputerServiceChannel : ComputerReference.IComputerService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ComputerServiceClient : System.ServiceModel.ClientBase<ComputerReference.IComputerService>, ComputerReference.IComputerService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ComputerServiceClient() : 
                base(ComputerServiceClient.GetDefaultBinding(), ComputerServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IComputerService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ComputerServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ComputerServiceClient.GetBindingForEndpoint(endpointConfiguration), ComputerServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ComputerServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ComputerServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ComputerServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ComputerServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ComputerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string AddComputer(ComputerReference.Computer computer)
        {
            return base.Channel.AddComputer(computer);
        }
        
        public System.Threading.Tasks.Task<string> AddComputerAsync(ComputerReference.Computer computer)
        {
            return base.Channel.AddComputerAsync(computer);
        }
        
        public string UpdateComputer(ComputerReference.Computer computer)
        {
            return base.Channel.UpdateComputer(computer);
        }
        
        public System.Threading.Tasks.Task<string> UpdateComputerAsync(ComputerReference.Computer computer)
        {
            return base.Channel.UpdateComputerAsync(computer);
        }
        
        public string DeleteComputer(string uuid)
        {
            return base.Channel.DeleteComputer(uuid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteComputerAsync(string uuid)
        {
            return base.Channel.DeleteComputerAsync(uuid);
        }
        
        public ComputerReference.Computer GetComputer(string uuid)
        {
            return base.Channel.GetComputer(uuid);
        }
        
        public System.Threading.Tasks.Task<ComputerReference.Computer> GetComputerAsync(string uuid)
        {
            return base.Channel.GetComputerAsync(uuid);
        }
        
        public System.Collections.Generic.List<ComputerReference.Computer> GetAllComputers()
        {
            return base.Channel.GetAllComputers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ComputerReference.Computer>> GetAllComputersAsync()
        {
            return base.Channel.GetAllComputersAsync();
        }
        
        public System.Collections.Generic.List<ComputerReference.Brand> GetAllBrands()
        {
            return base.Channel.GetAllBrands();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ComputerReference.Brand>> GetAllBrandsAsync()
        {
            return base.Channel.GetAllBrandsAsync();
        }
        
        public System.Collections.Generic.List<ComputerReference.OS> GetAllOses()
        {
            return base.Channel.GetAllOses();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ComputerReference.OS>> GetAllOsesAsync()
        {
            return base.Channel.GetAllOsesAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IComputerService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IComputerService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/wcf_assignment_3/ComputerService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ComputerServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IComputerService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ComputerServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IComputerService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IComputerService,
        }
    }
}
